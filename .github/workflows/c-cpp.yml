# # name: Build C++ Project

# # on:
# #   push:
# #     branches:
# #       - main
# #   pull_request:
# #     branches:
# #       - main

# # jobs:
# #   build:
# #     runs-on: windows-latest

# #     strategy:
# #       matrix:
# #         architecture:
# #           - x86
# #           - x64
# #           - ARM
# #           - ARM64

# #     steps:
# #       - name: Checkout code
# #         uses: actions/checkout@v2

# #       - name: Set up environment
# #         run: echo "Running on Windows - ${{ matrix.architecture }}"

# #       - name: Build
# #         run: g++ -static -std=c++17 -I./include -o main.exe src/main.cpp

# #       - name: Upload artifact
# #         uses: actions/upload-artifact@v2
# #         with:
# #           name: windows-${{ matrix.architecture }}-executable
# #           path: main.exe

# name: Create Release

# on:
#   push:
#     branches:
#       - main

# jobs:
#   create_release:
#     runs-on: windows-latest

#     strategy:
#       matrix:
#         architecture:
#           - x86
#           - x64
#           - ARM
#           - ARM64

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up environment
#         run: echo "Running on Windows - ${{ matrix.architecture }}"

#       - name: Build
#         run: g++ -static -std=c++17 -I./include -o main.exe src/main.cpp

#       - name: Upload artifact
#         uses: actions/upload-artifact@v2
#         with:
#           name: windows-${{ matrix.architecture }}-executable
#           path: main.exe

#       - name: Determine Alpha Version
#         id: determine_alpha_version
#         run: |
#           echo "::set-output name=ALPHA_VERSION::alpha.$(date +%Y%m%d).${{ github.run_number }}"

#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ steps.determine_alpha_version.outputs.ALPHA_VERSION }}
#           release_name: Release ${{ steps.determine_alpha_version.outputs.ALPHA_VERSION }}
#           body: |
#             This is an alpha release for version ${{ steps.determine_alpha_version.outputs.ALPHA_VERSION }}
#           draft: false
#           prerelease: false

name: Create Release

on:
  push:
    branches:
      - main

jobs:
  create_release:
    runs-on: windows-latest

    strategy:
      matrix:
        architecture:
          - x86
          - x64
          - ARM
          - ARM64

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up environment
        run: echo "Running on Windows - ${{ matrix.architecture }}"

      - name: Build
        run: g++ -static -std=c++17 -I./include -o main.exe src/main.cpp

      - name: Determine Alpha Version
        id: determine_alpha_version
        run: |
          echo "::set-output name=ALPHA_VERSION::alpha.$(date +%Y%m%d).${{ github.run_number }}"

      - name: Rename Artifact
        run: |
          mv main.exe KeyFlow-${{ matrix.architecture }}.exe

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.determine_alpha_version.outputs.ALPHA_VERSION }}
          release_name: Release ${{ steps.determine_alpha_version.outputs.ALPHA_VERSION }}
          body: |
            This is an alpha release for version ${{ steps.determine_alpha_version.outputs.ALPHA_VERSION }}
          draft: false
          prerelease: false
          asset_paths: |
            main-${{ matrix.architecture }}.exe
